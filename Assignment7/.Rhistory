#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
theURL <- getURL(url)
myTable <- readHTMLTable(theURL, header=TRUE, which=1)
colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# headers <- str_to_title(colnames(myTable))
# colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
myTable[[1]]
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
theURL <- getURL(url)
myTable <- readHTMLTable(theURL, header=TRUE, which=1)
colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# headers <- str_to_title(colnames(myTable))
# colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
# myTable[[1]]
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
# myTable
# #second Method (more work)
page <- read_html(url)
tables <- html_nodes(page, "table")
myTable <- html_table(tables[1], fill = TRUE)
# headers <- str_to_title(colnames(myTable))
colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
# myTable
# #second Method (more work)
page <- read_html(url)
tables <- html_nodes(page, "table")
myTable <- html_table(tables[1], fill = TRUE)
myTable <- data.frame(myTable)
# headers <- str_to_title(colnames(myTable))
colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
myTable[[1]]
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
# myTable
# #second Method (more work)
page <- read_html(url)
tables <- html_nodes(page, "table")
myTable <- html_table(tables[1], fill = TRUE)
myTable <- data.frame(myTable)
# headers <- str_to_title(colnames(myTable))
colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
myTable
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
# myTable
# #second Method (more work)
page <- read_html(url)
tables <- html_nodes(page, "table")
myTable <- html_table(tables[1], fill = TRUE)
myTable <- data.frame(myTable)
# headers <- str_to_title(colnames(myTable))
#colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
myTable
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
theURL <- getURL(url)
myTable <- readHTMLTable(theURL, header=TRUE, which=1)
#colnames(myTable) <- c("Title","Authors","Publisher","Published Date","ISBN")
myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable <- data.frame(myTable)
# #headers <- str_to_title(colnames(myTable))
# myTable
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
theURL <- getURL(url)
myTable <- readHTMLTable(theURL, header=TRUE, which=1)
myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable <- data.frame(myTable)
# #headers <- str_to_title(colnames(myTable))
# myTable
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
theURL <- getURL(url)
myTable <- readHTMLTable(theURL, header=TRUE, which=1)
myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable <- data.frame(myTable)
# #headers <- str_to_title(colnames(myTable))
# myTable
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# myTable
# #second Method (more work)
page <- read_html(url)
tables <- html_nodes(page, "table")
myTable <- html_table(tables[1], fill = TRUE)
myTable
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# myTable
# #second Method (more work)
page <- read_html(url)
tables <- html_nodes(page, "table")
myTable <- html_table(tables[1], fill = TRUE)
myTable[[1]]
#third method
# myTable <- read_html(url)
# tbl <- myTable %>%
#   html_nodes("table") %>%
#   .[[1]] %>%
#   html_table(fill = NA)
#
# tbl
# names(tbl)
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable[[1]]
#third method
myTable <- read_html(url)
tbl <- myTable %>%
html_nodes("table") %>%
.[[1]] %>%
html_table(fill = NA)
tbl
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
xmlData <- read_xml(url)
aiBooks <- xml_children(xmlData)
xmlBookDS <- c()
for (i in 1:length(aiBooks)){
xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
}
xmlBookDS <- data.frame(xmlBookDS)
colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
xmlBookDS
library(jsonlite)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.json"
jsonBookDS <- fromJSON(url)
jsonBookDS
#options(stringsAsFactors = FALSE)
options(scipen=999) # to get rid of the scientific notation for ISBN long number and leave it as character
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable[[1]]
#third method
myTable <- read_html(url)
htmlBokDS <- myTable %>%
html_nodes("table") %>%
.[[1]] %>%
html_table(fill = NA)
htmlBokDS
# url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
#
# xmlData <- read_xml(url)
# aiBooks <- xml_children(xmlData)
#
# xmlBookDS <- c()
# for (i in 1:length(aiBooks)){
#   xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
# }
#
# xmlBookDS <- data.frame(xmlBookDS)
#
# colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
#
# xmlBookDS
#-----------------------------------------------
#another method for fun
aiBooks <- xmlParse(url)
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
#
# xmlData <- read_xml(url)
# aiBooks <- xml_children(xmlData)
#
# xmlBookDS <- c()
# for (i in 1:length(aiBooks)){
#   xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
# }
#
# xmlBookDS <- data.frame(xmlBookDS)
#
# colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
#
# xmlBookDS
#-----------------------------------------------
#another method for fun
aiBooks <- xmlParse(url)
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
#
# xmlData <- read_xml(url)
# aiBooks <- xml_children(xmlData)
#
# xmlBookDS <- c()
# for (i in 1:length(aiBooks)){
#   xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
# }
#
# xmlBookDS <- data.frame(xmlBookDS)
#
# colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
#
# xmlBookDS
#-----------------------------------------------
#another method for fun
aiBooks <- xmlParse(url)
library(stringr)
library(XML)
library(RCurl)
library(rvest)  # my favorite
library(dplyr)
library(tools) # for Capitalizing the first Letter of every word
library("kableExtra")
install.packages("kableExtra")
library(stringr)
library(XML)
library(RCurl)
library(rvest)  # my favorite
library(dplyr)
library(tools) # for Capitalizing the first Letter of every word
library("kableExtra")
# to get rid of the scientific notation for ISBN long number and leave it as character, we include the folling option
options(scipen=999)
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
#
# xmlData <- read_xml(url)
# aiBooks <- xml_children(xmlData)
#
# xmlBookDS <- c()
# for (i in 1:length(aiBooks)){
#   xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
# }
#
# xmlBookDS <- data.frame(xmlBookDS)
#
# colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
#
# xmlBookDS
#-----------------------------------------------
#another method for fun
aiBooks <- xmlParse(url)
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
#
xmlData <- read_xml(url)
aiBooks <- xml_children(xmlData)
xmlBookDS <- c()
for (i in 1:length(aiBooks)){
xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
}
xmlBookDS <- data.frame(xmlBookDS)
#colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
xmlBookDS
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
xmlData <- read_xml(url)
aiBooks <- xml_children(xmlData)
xmlBookDS <- c()
for (i in 1:length(aiBooks)){
xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
}
xmlBookDS <- data.frame(xmlBookDS)
colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
xmlBookDS
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable[[1]]
#third method
myTable <- read_html(url)
htmlBokDS <- myTable %>%
html_nodes("table") %>%
.[[1]] %>%
html_table(fill = NA) # html_table converts data to an R data frame automatically
#htmlBokDS
#beautify the display
htmlBokDS  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "200px")
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable[[1]]
#third method
myTable <- read_html(url)
htmlBokDS <- myTable %>%
html_nodes("table") %>%
.[[1]] %>%
html_table(fill = NA) # html_table converts data to an R data frame automatically
#htmlBokDS
#beautify the display
htmlBokDS  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "75px")
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.html"
#first method
# theURL <- getURL(url)
# myTable <- readHTMLTable(theURL, header=TRUE, which=1)
# myTable
# #second Method (more work)
# page <- read_html(url)
# tables <- html_nodes(page, "table")
# myTable <- html_table(tables[1], fill = TRUE)
# myTable[[1]]
#third method
myTable <- read_html(url)
htmlBokDS <- myTable %>%
html_nodes("table") %>%
.[[1]] %>%
html_table(fill = NA) # html_table converts data to an R data frame automatically
#htmlBokDS
#beautify the display
htmlBokDS  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "200px")
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.xml"
xmlData <- read_xml(url)
aiBooks <- xml_children(xmlData)
xmlBookDS <- c()
for (i in 1:length(aiBooks)){
xmlBookDS <- rbind(xmlBookDS,xml_text(xml_children(aiBooks[i])))
}
xmlBookDS <- data.frame(xmlBookDS)
colnames(xmlBookDS) <- xml_name(xml_children(aiBooks[1]))
#xmlBookDS
#beautify the display
xmlBookDS  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "200px")
url <- "https://raw.githubusercontent.com/theoracley/Data607/master/mybooks.json"
#fromJSON method converts any json object to an R data frame.
jsonBookDS <- fromJSON(url)
#jsonBookDS
#beautify the display
jsonBookDS  %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "200px")
